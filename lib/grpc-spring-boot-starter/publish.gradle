
['bintrayUser', 'bintrayApiKey'].each{
    if (System.env[it])
        project[it] = System.env[it]
}

apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}


//Load data from environment if present to support Travis


//install {
//    repositories.mavenInstaller {
//        pom.project {
//            parent {
//                groupId 'org.springframework.boot'
//                artifactId 'spring-boot-starter-parent'
//                version "${project.springBoot_1_X_Version}"
//            }
//        }
//    }
//}

//This is only needed if bintrayUpload is done as part of releasing
task updateBintrayVersion << {
    bintray.pkg.version.name = project.version
}
bintrayUpload.dependsOn updateBintrayVersion

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publish = true
    pkg {
        repo = 'maven'
        name = 'grpc-spring-boot-starter'
        userOrg = 'lognet'
        licenses = ['Apache-2.0']
        configurations = ['archives']
        websiteUrl = gitHubUrl
        vcsUrl = "${gitHubUrl}.git"
    }
}
def isRelease  = !(version ==~ /.*SNAPSHOT/)
bintrayUpload.onlyIf {
    isRelease
}

artifactory {
    contextUrl = "http://oss.jfrog.org/artifactory/"
    publish {
        repository {
            repoKey = 'oss-snapshot-local' //libs-snapshot
            username = bintrayUser
            password = bintrayApiKey
            maven = true

        }
        defaults {
            publications ('mavenJava')
        }
    }
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (javadocJar) {
                classifier = 'javadoc'
            }
            artifact (sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}
artifactoryPublish.onlyIf {
    !isRelease
}